/*
Copyright 2020 Twitter, Inc.
SPDX-License-Identifier: Apache-2.0

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
https://openapi-generator.tech
Do not edit the class manually.
*/


package com.twitter.clientlib.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.util.HashSet;

import com.twitter.clientlib.JSON;

/**
 * Get2SpacesSearchResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Get2SpacesSearchResponse {
  public static final String SERIALIZED_NAME_DATA = "data";
    private final StringOperation stringOperation = new StringOperation(this);
    @SerializedName(SERIALIZED_NAME_DATA)
  private List<Space> data = null;

  public static final String SERIALIZED_NAME_ERRORS = "errors";
  @SerializedName(SERIALIZED_NAME_ERRORS)
  private List<Problem> errors = null;

  public static final String SERIALIZED_NAME_INCLUDES = "includes";
  @SerializedName(SERIALIZED_NAME_INCLUDES)
  private Expansions includes;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  private Get2ComplianceJobsResponseMeta meta;

  public Get2SpacesSearchResponse() { 
  }

  public Get2SpacesSearchResponse data(List<Space> data) {
    
    this.data = data;
    return this;
  }

  public Get2SpacesSearchResponse addDataItem(Space dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<>();
    }
    this.data.add(dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Space> getData() {
    return data;
  }


  public void setData(List<Space> data) {
    this.data = data;
  }


  public Get2SpacesSearchResponse errors(List<Problem> errors) {
    
    this.errors = errors;
    return this;
  }

  public Get2SpacesSearchResponse addErrorsItem(Problem errorsItem) {
    if (this.errors == null) {
      this.errors = new ArrayList<>();
    }
    this.errors.add(errorsItem);
    return this;
  }

   /**
   * Get errors
   * @return errors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Problem> getErrors() {
    return errors;
  }


  public void setErrors(List<Problem> errors) {
    this.errors = errors;
  }


  public Get2SpacesSearchResponse includes(Expansions includes) {
    
    this.includes = includes;
    return this;
  }

   /**
   * Get includes
   * @return includes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Expansions getIncludes() {
    return includes;
  }


  public void setIncludes(Expansions includes) {
    this.includes = includes;
  }


  public Get2SpacesSearchResponse meta(Get2ComplianceJobsResponseMeta meta) {
    
    this.meta = meta;
    return this;
  }

   /**
   * Get meta
   * @return meta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Get2ComplianceJobsResponseMeta getMeta() {
    return meta;
  }


  public void setMeta(Get2ComplianceJobsResponseMeta meta) {
    this.meta = meta;
  }



  @Override
  public boolean equals(Object o) {
      return stringOperation.equals(o);
  }

  @Override
  public int hashCode() {
      return stringOperation.hashCode();
  }

  @Override
  public String toString() {
      return stringOperation.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
      return stringOperation.toIndentedString(o);
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("data");
    openapiFields.add("errors");
    openapiFields.add("includes");
    openapiFields.add("meta");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Get2SpacesSearchResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
     // if (jsonObj == null) {
     //   if (Get2SpacesSearchResponse.openapiRequiredFields.isEmpty()) {
     //     return;
     //   } else { // has required fields
     //     throw new IllegalArgumentException(String.format("The required field(s) %s in Get2SpacesSearchResponse is not found in the empty JSON string", Get2SpacesSearchResponse.openapiRequiredFields.toString()));
     //   }
     // }

      JsonArray jsonArraydata = jsonObj.getAsJsonArray("data");
      if (jsonArraydata != null) {
        // ensure the json data is an array
        if (!jsonObj.get("data").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `data` to be an array in the JSON string but got `%s`", jsonObj.get("data").toString()));
        }

        // validate the optional field `data` (array)
        for (int i = 0; i < jsonArraydata.size(); i++) {
          Space.validateJsonObject(jsonArraydata.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArrayerrors = jsonObj.getAsJsonArray("errors");
      if (jsonArrayerrors != null) {
        // ensure the json data is an array
        if (!jsonObj.get("errors").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `errors` to be an array in the JSON string but got `%s`", jsonObj.get("errors").toString()));
        }

        // validate the optional field `errors` (array)
        for (int i = 0; i < jsonArrayerrors.size(); i++) {
          Problem.validateJsonObject(jsonArrayerrors.get(i).getAsJsonObject());
        };
      }
      // validate the optional field `includes`
      if (jsonObj.getAsJsonObject("includes") != null) {
        Expansions.validateJsonObject(jsonObj.getAsJsonObject("includes"));
      }
      // validate the optional field `meta`
      if (jsonObj.getAsJsonObject("meta") != null) {
        Get2ComplianceJobsResponseMeta.validateJsonObject(jsonObj.getAsJsonObject("meta"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Get2SpacesSearchResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Get2SpacesSearchResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Get2SpacesSearchResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Get2SpacesSearchResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<Get2SpacesSearchResponse>() {
           @Override
           public void write(JsonWriter out, Get2SpacesSearchResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Get2SpacesSearchResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Get2SpacesSearchResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Get2SpacesSearchResponse
  * @throws IOException if the JSON string is invalid with respect to Get2SpacesSearchResponse
  */
  public static Get2SpacesSearchResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Get2SpacesSearchResponse.class);
  }

 /**
  * Convert an instance of Get2SpacesSearchResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
      return stringOperation.toJson();
  }

    public static class StringOperation {
        private final Get2SpacesSearchResponse get2SpacesSearchResponse;

        public StringOperation(Get2SpacesSearchResponse get2SpacesSearchResponse) {
            this.get2SpacesSearchResponse = get2SpacesSearchResponse;
        }

        @Override
        public boolean equals(Object o) {
            if (get2SpacesSearchResponse == o) {
                return true;
            }
            if (o == null || get2SpacesSearchResponse.getClass() != o.getClass()) {
                return false;
            }
            Get2SpacesSearchResponse get2SpacesSearchResponse = (Get2SpacesSearchResponse) o;
            return Objects.equals(get2SpacesSearchResponse.getData(), get2SpacesSearchResponse.data) &&
                    Objects.equals(get2SpacesSearchResponse.getErrors(), get2SpacesSearchResponse.errors) &&
                    Objects.equals(get2SpacesSearchResponse.getIncludes(), get2SpacesSearchResponse.includes) &&
                    Objects.equals(get2SpacesSearchResponse.getMeta(), get2SpacesSearchResponse.meta);
        }

        @Override
        public int hashCode() {
            return Objects.hash(get2SpacesSearchResponse.getData(), get2SpacesSearchResponse.getErrors(), get2SpacesSearchResponse.getIncludes(), get2SpacesSearchResponse.getMeta());
        }

        @Override
        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append("class Get2SpacesSearchResponse {\n");
            sb.append("    data: ").append(toIndentedString(get2SpacesSearchResponse.getData())).append("\n");
            sb.append("    errors: ").append(toIndentedString(get2SpacesSearchResponse.getErrors())).append("\n");
            sb.append("    includes: ").append(toIndentedString(get2SpacesSearchResponse.getIncludes())).append("\n");
            sb.append("    meta: ").append(toIndentedString(get2SpacesSearchResponse.getMeta())).append("\n");
            sb.append("}");
            return sb.toString();
        }

        /**
         * Convert the given object to string with each line indented by 4 spaces
         * (except the first line).
         */
        private String toIndentedString(Object o) {
            if (o == null) {
                return "null";
            }
            return o.toString().replace("\n", "\n    ");
        }

        /**
         * Convert an instance of Get2SpacesSearchResponse to an JSON string
         *
         * @return JSON string
         */
        public String toJson() {
            return JSON.getGson().toJson(get2SpacesSearchResponse);
        }
    }
}

